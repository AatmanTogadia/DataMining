__author__ = 'Aatman'

from sklearn.linear_model import LogisticRegression
from sklearn import svm
import pylab as pl
import numpy as np
from sklearn import cross_validation
from sklearn.grid_search import GridSearchCV
from sklearn.cluster import KMeans

from sklearn.metrics.pairwise import cosine_similarity
import json


tweets = []
for line in open('HW10_Q2_unlabeled_sequences.txt').readlines():
    tweets.append(json.loads(line))

global a
a=0
# Generate X
X = []
for text in tweets:
	x=[]
	frequency = 0
	
	for i in text:
		
		if(i == "Seattle" or i == "Philapedia" or i=="Boston"):
			frequency+=1
			
			
		if (frequency>3):
			a+=1
			
			x.append(1)
			
			
		else:
			x.append(0)
			
			
	X.append(x)


# K-means clustering
km = KMeans(n_clusters = 3, n_init = 100) 
km.fit(X)





cluster = []
cluster_stat = dict()

for idx, cls in enumerate(km.labels_):
    if cluster_stat.has_key(cls):
        cluster_stat[cls] += 1
    else:
        cluster_stat[cls] = 1
    open('HW10_Q2_cluster-{0}.txt'.format(cls), 'a').write(json.dumps(tweets[idx]) + '\r\n')

print 'basic information about the clusters that are generated by the k-means clustering algorithm: \r\n'
print 'total number of clusters: {0}\r\n'.format(len(cluster_stat))
for cls, count in cluster_stat.items():
    print 'cluster {0} has {1} sequences'.format(cls, count)






